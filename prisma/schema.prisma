generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  AdminID Int  @id
  UserID  Int? @unique(map: "UserID")
}

model comment {
  CommentID   Int     @id @default(autoincrement())
  ParentID    Int?
  VendorID    Int?
  CustomerID  Int?
  CommentText String? @db.Text
}

model customer {
  CustomerID     Int     @id @default(autoincrement())
  CustomerName   String? @db.VarChar(255)
  BillingAddress String? @db.VarChar(255)
  PaymentMethod  String? @db.VarChar(255)
  UserID         Int?    @unique(map: "UserID")
}

model delivery {
  DeliveryID   Int       @id @default(autoincrement())
  OrderID      Int?      @unique(map: "OrderID")
  DeliveryDate DateTime? @db.DateTime(0)
  Status       String?   @db.VarChar(255)
}

model item {
  ItemID     Int     @id @default(autoincrement())
  ItemTypeID Int?
  ItemName   String? @db.VarChar(255)
  Price      Float?  @db.Float
}

model itemtype {
  ItemTypeID Int     @id @default(autoincrement())
  ItemType   String? @db.VarChar(255)
}

model laundrymachine {
  MachineID    Int     @id @default(autoincrement())
  MachineName  String? @db.VarChar(255)
  Availability String? @db.VarChar(255)
}

model laundrystaff {
  StaffID  Int     @id @default(autoincrement())
  JobTitle String? @db.VarChar(255)
  UserID   Int?    @unique(map: "UserID")
}

model order {
  OrderID       Int       @id @default(autoincrement())
  CustomerID    Int?
  ServiceTypeID Int?
  OrderDate     DateTime? @db.DateTime(0)
  TotalCost     Float?    @db.Float
  PaymentStatus String?   @db.VarChar(255)
  OrderStatus   String?   @db.VarChar(255)
  clothes       clothes[]
}

model orderdetails {
  OrderItemID Int  @id @default(autoincrement())
  OrderID     Int?
  ItemID      Int?
  Quantity    Int?
}

model reviews {
  ReviewID   Int     @id @default(autoincrement())
  VendorID   Int?
  CustomerID Int?
  Rating     Float?  @db.Float
  ReviewText String? @db.Text
}

model servicetype {
  ServiceTypeID   Int     @id @default(autoincrement())
  ServiceTypeName String? @db.VarChar(255)
}

model specialization {
  SpecializationID Int      @id @default(autoincrement())
  VendorID         Int?
  Name             String?  @db.VarChar(255)
  Rates            Float?   @db.Float
  vendor           vendor[]
}

model user {
  UserID         Int        @id @default(autoincrement())
  FirstName      String?    @db.VarChar(255)
  LastName       String?    @db.VarChar(255)
  Address        String?    @db.VarChar(255)
  Phone          String?    @db.VarChar(255)
  Email          String?    @db.VarChar(255)
  Username       String?    @db.VarChar(255)
  Password       String?    @db.VarChar(255)
  Role           user_Role?
  CustomerID     Int?
  VendorID       Int?
  LaundryStaffID Int?
  AdminID        Int?
}

model vendor {
  VendorID          Int             @id @default(autoincrement())
  UserID            Int?            @unique(map: "UserID")
  Name              String?         @db.VarChar(255)
  Location          String?         @db.VarChar(255)
  Phone             String?         @db.VarChar(255)
  Email             String?         @db.VarChar(255)
  Website           String?         @db.VarChar(255)
  DeliveryAvailable Boolean?
  WorkingHours      String?         @db.VarChar(255)
  Availability      Boolean?
  SpecializationID  Int?
  averagerating     averagerating[]
  specialization    specialization? @relation(fields: [SpecializationID], references: [SpecializationID], onDelete: NoAction, onUpdate: NoAction, map: "vendor_ibfk_1")

  @@index([SpecializationID], map: "SpecializationID")
}

model averagerating {
  AverageRatingID Int     @id @default(autoincrement())
  VendorID        Int?
  AverageRating   Float?  @db.Float
  vendor          vendor? @relation(fields: [VendorID], references: [VendorID], onDelete: NoAction, onUpdate: NoAction, map: "averagerating_ibfk_1")

  @@index([VendorID], map: "VendorID")
}

model clothes {
  ClothesID Int      @id @default(autoincrement())
  OrderID   Int?
  IsShalwar Boolean?
  IsKameez  Boolean?
  IsPant    Boolean?
  IsShirt   Boolean?
  IsJeans   Boolean?
  order     order?   @relation(fields: [OrderID], references: [OrderID], onDelete: NoAction, onUpdate: NoAction, map: "clothes_ibfk_1")

  @@index([OrderID], map: "OrderID")
}

enum user_Role {
  CUSTOMER
  VENDOR
  LAUNDRYSTAFF
  ADMIN
}
