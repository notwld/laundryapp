generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  UserID       Int           @id @default(autoincrement())
  FirstName    String
  LastName     String
  Address      String
  Phone        String
  Email        String
  Username     String
  Password     String
  Role         Role
  Customer     Customer?
  Vendor       Vendor?
  LaundryStaff LaundryStaff?
  Admin        Admin?
}

model Customer {
  CustomerID     Int       @id
  CustomerName   String
  BillingAddress String
  PaymentMethod  String
  UserID         Int       @unique
  Orders         Order[]
  User           User      @relation(fields: [UserID], references: [UserID])
  Reviews        Reviews[]
  Comment        Comment[]
}

model Vendor {
  VendorID          Int              @id
  UserID            Int              @unique
  Name              String
  Rates             Float
  Location          String
  Phone             String
  Email             String
  Website           String?
  DeliveryAvailable Boolean
  WorkingHours      String?
  Availability      String?
  User              User             @relation(fields: [UserID], references: [UserID])
  Reviews           Reviews[]
  Specialization    Specialization[]
  Comment           Comment[]
}

model Reviews {
  ReviewID   Int      @id @default(autoincrement())
  VendorID   Int
  CustomerID Int
  ReviewText String
  Vendor     Vendor   @relation(fields: [VendorID], references: [VendorID])
  Customer   Customer @relation(fields: [CustomerID], references: [CustomerID])
}

model Comment {
  CommentID     Int       @id @default(autoincrement())
  ParentID      Int?
  VendorID      Int
  CustomerID    Int
  CommentText   String
  Vendor        Vendor    @relation(fields: [VendorID], references: [VendorID])
  Customer      Customer  @relation(fields: [CustomerID], references: [CustomerID])
  ParentComment Comment?  @relation("ChildComments", fields: [ParentID], references: [CommentID])
  ChildComments Comment[] @relation("ChildComments")
}

model Specialization {
  SpecializationID Int    @id @default(autoincrement())
  VendorID         Int
  Specialization   String
  Vendor           Vendor @relation(fields: [VendorID], references: [VendorID])
}

model ItemType {
  ItemTypeID Int    @id @default(autoincrement())
  ItemType   String
  Item       Item[]
}

model Item {
  ItemID       Int            @id @default(autoincrement())
  ItemTypeID   Int
  ItemName     String
  Price        Float
  ItemType     ItemType       @relation(fields: [ItemTypeID], references: [ItemTypeID])
  OrderDetails OrderDetails[]
}

model Order {
  OrderID       Int            @id @default(autoincrement())
  CustomerID    Int
  ServiceTypeID Int
  OrderDate     DateTime
  TotalCost     Float
  PaymentStatus String
  OrderStatus   String
  Customer      Customer       @relation(fields: [CustomerID], references: [CustomerID])
  ServiceType   ServiceType    @relation(fields: [ServiceTypeID], references: [ServiceTypeID])
  OrderDetails  OrderDetails[]
  Delivery      Delivery?
}

model OrderDetails {
  OrderItemID Int   @id @default(autoincrement())
  OrderID     Int
  ItemID      Int
  Quantity    Int
  Order       Order @relation(fields: [OrderID], references: [OrderID])
  Item        Item  @relation(fields: [ItemID], references: [ItemID])
}

model ServiceType {
  ServiceTypeID   Int     @id @default(autoincrement())
  ServiceTypeName String
  Order           Order[]
}

model LaundryStaff {
  StaffID  Int    @id
  JobTitle String
  UserID   Int    @unique
  User     User   @relation(fields: [UserID], references: [UserID])
}

model LaundryMachine {
  MachineID    Int          @id @default(autoincrement())
  MachineName  String
  Availability Availability
}

model Delivery {
  DeliveryID   Int      @id @default(autoincrement())
  OrderID      Int      @unique
  DeliveryDate DateTime
  Status       Status
  Order        Order    @relation(fields: [OrderID], references: [OrderID])
}

model Admin {
  AdminID Int  @id
  UserID  Int  @unique
  User    User @relation(fields: [UserID], references: [UserID])
}

enum Role {
  CUSTOMER
  VENDOR
  LAUNDRYSTAFF
  ADMIN
}

enum PaymentStatus {
  PAID
  UNPAID
}

enum Availability {
  AVAILABLE
  UNAVAILABLE
}

enum Status {
  DELIVERED
  UNDELIVERED
}
